*   Represnt ALV Report in Blocks

   REPORT ZIB_ALV.

*   FIRST STRUCTURE VBAK
TYPES : BEGIN OF ITY_VBAK,

  VBELN TYPE VBAK-VBELN,
  ERDAT TYPE VBAK-ERDAT,
  ERZET TYPE VBAK-ERZET,
  ERNAM TYPE VBAK-ERNAM,
  VBTYP TYPE VBAK-VBTYP,

  END OF ITY_VBAK.

*  DECLERATION OF FIRST STRUCTURE VBAK
DATA :IT_VBAK TYPE STANDARD TABLE OF ITY_VBAK,
      WA_VBAK TYPE ITY_VBAK.

*  SECOND STRUCTURE VBAP
TYPES : BEGIN OF ITY_VBAP,

  VBELN TYPE VBAP-VBELN,
  POSNR TYPE VBAP-POSNR,
  MATNR TYPE VBAP-MATNR,


  END OF ITY_VBAP.

*  DECLERATION OF SECOND STRUCTURE VBAP
DATA :IT_VBAP TYPE STANDARD TABLE OF ITY_VBAP,
      WA_VBAP TYPE ITY_VBAP,
      IT_FIELDCAT_vbak TYPE SLIS_T_FIELDCAT_ALV,
      WA_FIELDCAT_vbak TYPE SLIS_FIELDCAT_ALV,
      IT_FIELDCAT_vbap TYPE SLIS_T_FIELDCAT_ALV,
      WA_FIELDCAT_vbap TYPE SLIS_FIELDCAT_ALV.

*  LAYOUT DECLERATION IN BLOCK FUN.
  DATA :IT_EVENTS_VBAK TYPE SLIS_T_EVENT,
        WA_LAYOUT_VBAK TYPE SLIS_LAYOUT_ALV.
  DATA :IT_EVENTS_VBAP TYPE SLIS_T_EVENT,
        WA_LAYOUT_VBAP TYPE SLIS_LAYOUT_ALV.




*  DECLERATION OF SELECT OPTION
DATA LV_VBELN TYPE VBAK-VBELN.

SELECT-OPTIONS : S_VBELN FOR LV_VBELN.


*  SELECT CODE
SELECT VBELN, ERDAT,  ERZET,  ERNAM,  ERNAM
  FROM VBAK
  INTO TABLE @IT_VBAK
  WHERE VBAK~VBELN IN @S_VBELN.

*  JOIN BETWEEN TWO TABLE
  IF IT_VBAK IS NOT INITIAL.
    SELECT VBELN, POSNR, MATNR
      FROM VBAP
      INTO TABLE @IT_VBAP
      WHERE VBELN = @WA_VBAK-VBELN.
      ENDIF.



*  fieldcataloge
      WA_FIELDCAT_VBAK-FIELDNAME = 'VBELN'.
*      WA_FIELDCAT_VBAK-TABNAME= 'VBAK'.
  WA_FIELDCAT_VBAK-SELTEXT_M = 'Sales Document'.
  WA_FIELDCAT_VBAK-COL_POS = 1.
  APPEND WA_FIELDCAT_VBAK TO IT_FIELDCAT_VBAK.
  CLEAR WA_FIELDCAT_VBAK.

  WA_FIELDCAT_VBAK-FIELDNAME = 'ERDAT'.
*  WA_FIELDCAT_VBAK-TABNAME= 'LT_VBAK'.
  WA_FIELDCAT_VBAK-SELTEXT_M = 'Created On'.
  WA_FIELDCAT_VBAK-COL_POS = 2.
  APPEND WA_FIELDCAT_VBAK TO IT_FIELDCAT_VBAK.
  CLEAR WA_FIELDCAT_VBAK.

  WA_FIELDCAT_VBAK-FIELDNAME = 'ERZET'.
*  WA_FIELDCAT_VBAK-TABNAME= 'LT_VBAK'.
  WA_FIELDCAT_VBAK-SELTEXT_M = 'Time'.
  WA_FIELDCAT_VBAK-COL_POS = 3.
   APPEND WA_FIELDCAT_VBAK TO IT_FIELDCAT_VBAK.
  CLEAR WA_FIELDCAT_VBAK.

  WA_FIELDCAT_VBAK-FIELDNAME = 'ERNAM'.
*  WA_FIELDCAT_VBAK-TABNAME= 'LT_VBAK'.
  WA_FIELDCAT_VBAK-SELTEXT_M = 'Name'.
  WA_FIELDCAT_VBAK-COL_POS = 4.
   APPEND WA_FIELDCAT_VBAK TO IT_FIELDCAT_VBAK.
  CLEAR WA_FIELDCAT_VBAK.

  WA_FIELDCAT_VBAK-FIELDNAME = 'VBTYP'.
*  WA_FIELDCAT_VBAK-TABNAME= 'LT_VBAK'.
  WA_FIELDCAT_VBAK-SELTEXT_M = 'Document Category'.
  WA_FIELDCAT_VBAK-COL_POS = 5.
   APPEND WA_FIELDCAT_VBAK TO IT_FIELDCAT_VBAK.
  CLEAR WA_FIELDCAT_VBAK.

  WA_FIELDCAT_VBAP-FIELDNAME = 'VBELN'.
*  WA_FIELDCAT_VBAK-TABNAME= 'LT_VBAP'.
  WA_FIELDCAT_VBAP-SELTEXT_M = 'Sales Document'.
  WA_FIELDCAT_VBAP-COL_POS = 1.
  APPEND WA_FIELDCAT_VBAP TO IT_FIELDCAT_VBAP.
  CLEAR WA_FIELDCAT_VBAP.

  WA_FIELDCAT_VBAP-FIELDNAME = 'POSNR'.
*  WA_FIELDCAT_VBAK-TABNAME= 'LT_VBAP'.
  WA_FIELDCAT_VBAP-SELTEXT_M = 'Item'.
  WA_FIELDCAT_VBAP-COL_POS = 2.
  APPEND WA_FIELDCAT_VBAP TO IT_FIELDCAT_VBAP.
  CLEAR WA_FIELDCAT_VBAP.

  WA_FIELDCAT_VBAP-FIELDNAME = 'MATNR'.
*  WA_FIELDCAT_VBAK-TABNAME= 'LT_VBAP'.
  WA_FIELDCAT_VBAP-SELTEXT_M = 'Material'.
  WA_FIELDCAT_VBAP-COL_POS = 3.
  APPEND WA_FIELDCAT_VBAP TO IT_FIELDCAT_VBAP.
  CLEAR WA_FIELDCAT_VBAP.


*  DISPLAY ON BLOCKS .

*  FIRST FUN (INITIAL)
CALL FUNCTION 'REUSE_ALV_BLOCK_LIST_INIT'
  EXPORTING
    i_callback_program             = SY-REPID
*   I_CALLBACK_PF_STATUS_SET       = ' '
*   I_CALLBACK_USER_COMMAND        = ' '
*   IT_EXCLUDING                   =
          .


*  SECONED FUN (APPEND)
CALL FUNCTION 'REUSE_ALV_BLOCK_LIST_APPEND'
  EXPORTING
    is_layout                        = WA_LAYOUT_VBAK
    it_fieldcat                      = IT_FIELDCAT_vbak
    i_tabname                        ='LT_VBAK'
    it_events                        = IT_EVENTS_VBAK
*   IT_SORT                          =
*   I_TEXT                           = ' '
  TABLES
    t_outtab                         = IT_VBAK
 EXCEPTIONS
   PROGRAM_ERROR                    = 1
   MAXIMUM_OF_APPENDS_REACHED       = 2
   OTHERS                           = 3
          .
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.

CALL FUNCTION 'REUSE_ALV_BLOCK_LIST_APPEND'
  EXPORTING
    is_layout                        = WA_LAYOUT_VBAP
    it_fieldcat                      = IT_FIELDCAT_VBAP
    i_tabname                        ='LT_VBAP'
    it_events                        = IT_EVENTS_VBAP
*   IT_SORT                          =
*   I_TEXT                           = ' '
  TABLES
    t_outtab                         = IT_VBAP
 EXCEPTIONS
   PROGRAM_ERROR                    = 1
   MAXIMUM_OF_APPENDS_REACHED       = 2
   OTHERS                           = 3
          .
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.


*  THERD FUN DISPLAY
CALL FUNCTION 'REUSE_ALV_BLOCK_LIST_DISPLAY'
* EXPORTING
*   I_INTERFACE_CHECK             = ' '
*   IS_PRINT                      =
*   I_SCREEN_START_COLUMN         = 0
*   I_SCREEN_START_LINE           = 0
*   I_SCREEN_END_COLUMN           = 0
*   I_SCREEN_END_LINE             = 0
* IMPORTING
*   E_EXIT_CAUSED_BY_CALLER       =
*   ES_EXIT_CAUSED_BY_USER        =
 EXCEPTIONS
   PROGRAM_ERROR                 = 1
   OTHERS                        = 2
          .
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.
